<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link href='https://fonts.googleapis.com/css?family=Italianno' rel='stylesheet'>
    <link rel="stylesheet" type="text/css" href="/css/admin/admin-dashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css">
</head>


<body>


    <%- include('../partials/adminoffcanvas') %>

        <!------------------------------------- starting of the admin graph side-------------------------------------------------  -->

        <div class="container-fluid">
            <div class="row  col-lg-12">

                <div class="d-flex justify-content-center bg-light">
                    <% if (messages.success) { %>
                        <div class="container my-3" style="border-radius: 20px;" id="msg-div">
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <p class="m-0"><strong>Message.! </strong>
                                    <%= messages.success %>
                                </p>
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        </div>
                        <% }else if (messages.error){ %>
                            <div class="container my-3" style="border-radius: 20px;" id="msg-div">
                                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    <p class="m-0"><strong>Message.! </strong>
                                        <%= messages.error %>
                                    </p>
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                            </div>
                            <%}%>

                                <script>
                                    setTimeout(function () {
                                        document.getElementById('msg-div').style.display = 'none';
                                    }, 2000);
                                </script>
                </div>
                <div class="details">
                    <div class="recentOrders">
                        <div class="container cardHeader">
                            <h2 class=" text-shadow fw-bold text-center "> Admin Dashboard</h2>
                            <div class="d-flex justify-content-end">
                                <button type="button" id="downloadReportButton"
                                    class="btn btn-sm  btn-secondary ">Download Sales
                                    Report</button>

                            </div>
                        </div>

                        <div class="modal fade shadow-lg" id="salesReportModal" tabindex="-1"
                            aria-labelledby="salesReportModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="salesReportModalLabel">Sales Report</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" id="closebtn"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form action="/admin/salesReportDownload" method="post">
                                            <span class="text-danger" id="error"></span>
                                            <div class="mb-3">
                                                <label for="startDate" class="form-label">Start Date:</label>
                                                <input type="date" name="startDate" class="form-control"
                                                    onchange="dateValidation()" id="startDate" required>
                                            </div>
                                            <div class="mb-3">
                                                <label for="endDate" class="form-label">End Date:</label>
                                                <input type="date" name="endDate" class="form-control" id="endDate"
                                                    onchange="dateValidation()" required>
                                            </div>

                                            <div class="modal-footer">
                                                <button type="submit" class="btn btn-dark" onclick="loader()"
                                                    id="downBtn">Download Report</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="container mt-4">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="card mb-4 shadow" style="background-color: #fff;">
                                        <h4 class="card-header fa-solid">Sales Analysis</h4>
                                        <div class="card-body">
                                            <div class="row">

                                                <div class="dropdown-sali">
                                                    <button class="btn btn-whigt btn-sm dropdown-toggle" type="button"
                                                        id="timeIntervalDropdown" data-toggle="dropdown-sali"
                                                        aria-haspopup="true" aria-expanded="false">

                                                    </button>

                                                    <div class="dropdown-menu show"
                                                        aria-labelledby="timeIntervalDropdown">
                                                        <a class="dropdown-item" id="byDayOption">Day</a>
                                                        <a class="dropdown-item" id="byMonthOption">Month</a>
                                                        <a class="dropdown-item" id="byYearOption">Year</a>
                                                    </div>
                                                </div>

                                                <div class="col-lg-12">
                                                    <canvas id="salesGraphAmount"></canvas>
                                                </div>
                                                <div class="col-lg-12">
                                                    <canvas id="salesGraphCount"></canvas>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="card mb-4 shadow" style="background-color: #fff;">
                                        <h4 class="card-header fa-solid">Latest Orders</h4>
                                        <div class="card-body ">
                                            <div class="table-responsive">
                                                <table class="table table-borderless">
                                                    <thead>
                                                        <tr>
                                                            <th>Order ID</th>
                                                            <th>Date</th>
                                                            <th>Total</th>
                                                            <th>Payment</th>
                                                            <th>Status</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="latestOrdersTable">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="card shadow" style="background-color: #fff;">
                                        <h4 class="card-header fa-solid">Best Sellers</h4>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <table class="table table-borderless">
                                                    <thead>
                                                        <tr>
                                                            <th>Product Image</th>
                                                            <th>Product Id </th>
                                                            <th>Product Name</th>
                                                            <th>Price</th>
                                                            <th>Status</th>
                                                            <th>Sold</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="bestSellersTable">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                </div>


            </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
            integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
            crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script>

        <!-- Your other scripts -->


        <script>

            //Validation for the date for download 

            function dateValidation() {
                var startDate = new Date(document.getElementById('startDate').value);
                var endDate = new Date(document.getElementById('endDate').value);
                const currentDate = new Date();
                var downBtn = document.getElementById('downBtn');
                var error = document.getElementById('error');
                if (startDate > currentDate) {
                    error.innerHTML = 'Invalid date range: Start date cannot be in the future.';
                    downBtn.style.display = 'none';
                } else if (endDate >= currentDate) {
                    error.innerHTML = 'Invalid date range: End date cannot be in the future.';
                    downBtn.style.display = 'none';
                } else if (startDate > endDate) {
                    error.innerHTML = 'Invalid date range: Start date cannot be after end date.';
                    downBtn.style.display = 'none';
                } else {
                    error.innerHTML = '';
                    downBtn.style.display = 'block';
                }
            }

            //function for timer of download sales report

            function loader() {
                let timerInterval;
                Swal.fire({
                    title: "Auto close toast!",
                    html: "I will close in <b></b> milliseconds.",
                    timer: 2000,
                    timerProgressBar: true,
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                        const timer = Swal.getPopup().querySelector("b");
                        timerInterval = setInterval(() => {
                            timer.textContent = `${Swal.getTimerLeft()}`;
                        }, 100);
                    },
                    willClose: () => {
                        clearInterval(timerInterval);
                    }
                }).then((result) => {
                    if (result.dismiss === Swal.DismissReason.timer) {
                        console.log("I was closed by the timer");
                    }
                });
            }

            //script for showing the modal of calander for the sales download button

            document.addEventListener('DOMContentLoaded', function () {
                var modalButton = document.querySelector('#downloadReportButton');
                var closebtn = document.querySelector('#closebtn');
                var salesReportModal = new bootstrap.Modal(document.getElementById('salesReportModal'));
                modalButton.addEventListener('click', function () {
                    salesReportModal.show();
                });
                closebtn.addEventListener('click', function () {
                    salesReportModal.hide();
                });
                var salesReportForm = document.getElementById('salesReportForm');
                salesReportForm.addEventListener('submit', function (event) {
                    event.preventDefault();
                    var startDate = document.getElementById('startDate').value;
                    var endDate = document.getElementById('endDate').value;
                    var fileType = document.getElementById('fileType').value;
                    salesReportModal.hide()
                });
            });

            //Event listener for the selection of graph for periods

            updateSalesGraph("day");

            document.getElementById("byDayOption").addEventListener("click", function () {
                document.getElementById("timeIntervalDropdown").textContent = "By Day";
                updateSalesGraph("day");
            });

            document.getElementById("byMonthOption").addEventListener("click", function () {
                document.getElementById("timeIntervalDropdown").textContent = "By Month";
                updateSalesGraph("month");
            });

            document.getElementById("byYearOption").addEventListener("click", function () {
                document.getElementById("timeIntervalDropdown").textContent = "By Year";
                updateSalesGraph("year");
            });

            // function for picking the sales report interval

            async function fetchSalesData(timeInterval) {
                try {
                    let response;
                    if (timeInterval === "day") {
                        response = await fetch('/admin/countByday');
                    } else if (timeInterval === "month") {
                        response = await fetch(`/admin/countBy${timeInterval}`);
                    } else if (timeInterval === "year") {
                        response = await fetch(`/admin/countBy${timeInterval}`);
                    } else {
                        return false;
                    }
                   


                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    const data = await response.json();
                    return data;
                } catch (error) {
                    console.error("Error fetching data:", error);
                }
            }


            async function fetchOrdersAndSales() {
                try {
                    const response = await fetch("/admin/latestOrders");
                    console.log('order round rigth now is working ');
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    const data = await response.json();
                    return data;
                } catch (error) {
                    console.log("Error fetching data", error);
                }
            }

            async function updateSalesGraph(timeInterval) {
                const salesData = await fetchSalesData(timeInterval);
                const Amount = document.getElementById("salesGraphAmount").getContext("2d");
                const Count = document.getElementById("salesGraphCount").getContext("2d");

                if (window.myChart1) {
                    window.myChart1.destroy();
                }
                if (window.myChart2) {
                    window.myChart2.destroy();
                }

                window.myChart1 = new Chart(Amount, {
                    type: 'line',
                    data: {
                        labels: salesData.labelsByCount,
                        datasets: [{
                            label: "Sales by orders",
                            data: salesData.dataByCount,
                            borderColor: "dark",
                            fill: false
                        }]
                    },
                    options: {
                        legend: { display: false },
                        elements: {
                            line: {
                                tension: 0.4
                            }
                        }
                    }
                });


                const barColors = ["gray", "gray", "gray", "gray", "gray"];
                window.myChart2 = new Chart(Count, {
                    type: "bar",
                    data: {
                        labels: salesData.labelsByAmount,
                        datasets: [
                            {
                                label: "Sales by Amount",
                                data: salesData.dataByAmount,
                                backgroundColor: barColors,
                                borderColor: "dark ",

                                borderWidth: 3,
                            },
                        ],
                    },
                    options: {
                        scales: {
                            x: [{
                                grid: {
                                    display: true
                                }
                            }],
                            y: [{
                                beginAtZero: true,
                                maxTicksLimit: 5
                            }]
                        }
                    },
                });

            }


            // Script for update LatestOrders and BestSellers


            async function updateLatestOrdersAndBestSellers() {
                const data = await fetchOrdersAndSales();
                const latestOrdersTable = document.getElementById("latestOrdersTable");
                const bestSellersTable = document.getElementById("bestSellersTable");
                const ordersData = data.latestOrders;
                const bestSellersData = data.bestSeller;

                ordersData.forEach((order) => {
                    const row = latestOrdersTable.insertRow();
                    const orderIdCell = row.insertCell(0);
                    const dateCell = row.insertCell(1);
                    const totalCell = row.insertCell(2);
                    const paymentCell = row.insertCell(3);
                    const statusCell = row.insertCell(4);

                    orderIdCell.textContent = 'ORD_' + order._id;
                    dateCell.textContent = new Date(order.orderDate).toLocaleString('en-US', { timeZone: 'Asia/Kolkata' })
                    totalCell.textContent = order.discountAmount || order.totalAmount;
                    paymentCell.textContent = order.paymentMethod;
                    statusCell.textContent = order.status;
                });

                bestSellersData.forEach((seller) => {

                    const row = bestSellersTable.insertRow();
                    const productImageCell = row.insertCell(0);
                    const productCell = row.insertCell(1);
                    const productNameCell = row.insertCell(2);
                    const priceCell = row.insertCell(3);
                    const statusCell = row.insertCell(4);
                    const salesCell = row.insertCell(5);

                    const imgElement = document.createElement("img");
                    const imageUrl = "/uploads/" + seller.productDetails.images[0];
                    imgElement.src = imageUrl;
                    imgElement.style.maxWidth = "50px";
                    productImageCell.appendChild(imgElement);
                    productCell.textContent = seller.productDetails._id;
                    productNameCell.textContent = seller.productDetails.ProductName;
                    priceCell.textContent = seller.productDetails.DiscountAmount;
                    statusCell.textContent = seller.productDetails.AvailableQuantity === 0 ? "Out of Stock" : "In Stock";
                    salesCell.textContent = seller.totalCount;
                });
            }

            updateSalesGraph();
            updateLatestOrdersAndBestSellers();


        </script>






        <!-- <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
            integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
            crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
            crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous"></script> -->




        <!-- Bootstrap JavaScript (place at the end of the body) -->

        <script>
            var myOffcanvas = new bootstrap.Offcanvas(document.getElementById('staticBackdrop'));
        </script>

</body>

</html>